<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ctlWebApiCanOnlyConfigureOneAtATime" xml:space="preserve">
    <value>Solo puede configurar un servicio de API web por vez</value>
  </data>
  <data name="ctlWebApiFailedToAddApiToDatabase" xml:space="preserve">
    <value>No se pudo agregar el servicio de API web a la base de datos: {0}</value>
  </data>
  <data name="ctlWebApiFailedToRemoveWebApi" xml:space="preserve">
    <value>No se pudieron quitar los servicios de API web: {0}</value>
  </data>
  <data name="ctlWebApiFailedToUpdateEnabledState" xml:space="preserve">
    <value>No se pudo actualizar el estado habilitado de los servicios de API web: {0}</value>
  </data>
  <data name="ctlWebApiFailedToUpdateWebApi" xml:space="preserve">
    <value>No se pudo actualizar el servicio de API web: {0}</value>
  </data>
  <data name="ctlWebApiPleaseSelectASingleWebApi" xml:space="preserve">
    <value>Seleccione un único servicio de API web</value>
  </data>
  <data name="ctlWebApiPleaseSelectOneOrMoreToDelete" xml:space="preserve">
    <value>Primero seleccione un servicio de API web o más para eliminar</value>
  </data>
  <data name="ctlWebApiUnexpectedErrorAdded_Template" xml:space="preserve">
    <value>Error imprevisto "{0}". Es posible que el nuevo servicio de API web no se haya agregado correctamente.</value>
  </data>
  <data name="ctlWebApiYouMustSelectOneApiToUpdate" xml:space="preserve">
    <value>Primero debe seleccionar un servicio de API web para actualizar</value>
  </data>
  <data name="ctlWebApiInvalidActionForForm" xml:space="preserve">
    <value>Acción no válida para el formulario de servicio de API web: {0}</value>
  </data>
  <data name="ctlWebApiFailedToRetrieveList" xml:space="preserve">
    <value>No se pudo recuperar una lista de servicios de API web de la base de datos. El mensaje de error fue "{0}"</value>
  </data>
  <data name="ctlWebServicesViewCanOnlyConfigureOneAtATime" xml:space="preserve">
    <value>Solo puede configurar un servicio web por vez</value>
  </data>
  <data name="ctlWebServicesViewYouMustSelectOneToUpdate" xml:space="preserve">
    <value>Primero debe seleccionar al menos un servicio web para actualizar</value>
  </data>
  <data name="ctlWebServicesViewFailedToUpdateWebService" xml:space="preserve">
    <value>No se pudo actualizar el servicio web:- {0}</value>
  </data>
  <data name="ctlWebServicesViewServicesCouldNotBeDeleted" xml:space="preserve">
    <value>No se pudieron eliminar los siguientes servicios porque están asociados con habilidades: {0}</value>
  </data>
  <data name="ctlWebApiServices_WebApiIsLinkedToSkill" xml:space="preserve">
    <value>Esta API web está asociada con la habilidad "{0}". Cambiar la definición de la API web puede impedir que la habilidad funcione. Si es necesario, vuelva a importar la habilidad para sobrescribir cualquier cambio y revertir la definición de la API web a la configuración predeterminada.</value>
  </data>
</root>